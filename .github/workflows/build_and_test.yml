#
# This workflow was inspired by the example one from
# https://github.com/bast/gtest-demo/blob/master/.github/workflows/test.yml.
#
name: Data Structure and Algorithms Build and Tests

on:
  push:
  pull_request:

env:
  BUILD_DIR: build
  TEST_RESULTS_DIR: build/testResults

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: |
        cmake -S. -B${{ env.BUILD_DIR }} -DCMAKE_BUILD_TYPE=Debug

    - name: Build
      run: |
        cmake --build ${{ env.BUILD_DIR }} --config Debug

    - name: Test
      env:
        GTEST_OUTPUT: xml:${{ env.TEST_RESULTS_DIR }}
      run: |
        mkdir ${{ env.TEST_RESULTS_DIR }}
        ctest --test-dir ${{ env.BUILD_DIR }} -C Debug -T test --output-on-failure

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          ${{ env.TEST_RESULTS_DIR }}/**/*.xml

    - name: Publish Test Results II
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: CTest Tests
        path: ${{ env.TEST_RESULTS_DIR }}/**/*.xml
        reporter: java-junit
